{#- Usage of this is governed by a license that can be found in doc/license.rst -#}
{%- from 'nrpe/passive.jinja2' import passive_interval with context -%}
{%- set check_mail_stack = salt['pillar.get']('mail:check_mail_stack', {}) -%}

# {{ salt['pillar.get']('message_do_not_modify') }}

{%- if check_mail_stack is mapping and check_mail_stack|length > 0 -%}
    {%- set username = salt['pillar.get']('mail:check_mail_stack:username') -%}
    {%- set mailname = salt['pillar.get']('mail:mailname') %}
mailstack_functionality:
  description: Mail Stack Functionality
  command: /usr/lib/nagios/plugins/check_mail_stack.py --formula=mail.server --check=mailstack_functionality
  {{ passive_interval(10) }} {#- 10 minutes #}
  dependencies:
{%- set ssl = salt['pillar.get']('dovecot:ssl', False) %}
    - dovecot_{% if ssl and grains['oscodename'] != 'precise' %}s{% endif %}imap
    {#- no alert if load is too high #}
    - load_average
  timeout: 55
  arguments:
    first_notification_delay: 30 {#- minutes #}
    freshness: 12 {#- minutes #}
    username: {{ username + '@' + mailname }}
    password: "{{ salt['pillar.get']('ldap:data', {})[mailname][username]['passwd'] }}"
    imap_server: localhost
    smtp_server: {{ salt['pillar.get']('mail:check_mail_stack:smtp_server') }}
    {#- wait N seconds after sending mail #}
    smtp_wait: {{ salt['pillar.get']('mail:check_mail_stack:smtp_wait', 10) }}
    {#- Assuming that if dovecot is configured to use SSL,
        means all the stack uses SSL #}
    ssl: {{ ssl }}
{%- endif %}
