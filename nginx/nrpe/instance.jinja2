{#- Usage of this is governed by a license that can be found in doc/license.rst -#}
{%- from 'nrpe/passive.jinja2' import passive_interval with context -%}

{%- macro nginx_instance(formula, http=True, http_uri='/', http_result=None, http_port=80, https_uri=None, https_result="200 OK", pillar_prefix=None, timeout=False, domain_name=None, allow_ssl_redirect=True, check_interval=False, deployment=None, extra_dependencies=()) -%}
    {%- set first_ip = salt['monitoring.data']()['ip_addrs']['public'] -%}
    {%- if not pillar_prefix -%}
        {%- set pillar_prefix = formula -%}
    {%- endif -%}
    {%- if not deployment -%}
        {%- set deployment = formula -%}
    {%- endif -%}
    {%- if not domain_name -%}
        {%- set domain_name = salt['pillar.get'](pillar_prefix + ':hostnames')[0] -%}
    {%- endif %}
    {#- if allow_ssl_redirect is True (because we can't trust pillar value in
        every cases.
        and pillar value ask for it
        http is redirected to https, force a specific header.
      -#}
    {%- if salt['pillar.get'](pillar_prefix + ':ssl', False)
        and salt['pillar.get'](pillar_prefix + ':ssl_redirect', True)
        and allow_ssl_redirect -%}
        {%- set http_result="301 Moved Permanently" -%}
    {%- elif not http_result -%}
        {%- set http_result="200 OK" -%}
    {%- endif %}

{%- set first_ipv6 = salt['monitoring.data']()['ip_addrs6']['public'] %}
{%- if http %}
    {% for ip_version, enabled in {"ipv4": True, "ipv6": first_ipv6}.iteritems() %}
        {% if enabled %}
            {%- if ip_version == "ipv4" %}
{{ formula }}_nginx_http:
  description: {{ deployment|capitalize }} NGINX HTTP Protocol
  command: /usr/lib/nagios/plugins/check_http -H {{ domain_name }} -u {{ http_uri }} -p {{ http_port }} -e '{{ http_result }}' -I {{ first_ip }}
            {%- elif ip_version == "ipv6" %}
{{ formula }}_nginx_http_ipv6:
  description: {{ deployment|capitalize }} NGINX HTTP Protocol using IPv6
  command: /usr/lib/nagios/plugins/check_http -6 -H {{ domain_name }} -u {{ http_uri }} -p {{ http_port }} -e '{{ http_result }}' -I [{{ first_ipv6 }}]
            {%- endif %}
            {%- if timeout %} --timeout={{ timeout }}{% endif -%}
            {%- set __test__ = salt['pillar.get']('__test__', False) %}
            {%- if timeout %}
  timeout: {{ timeout }}
            {%- endif %}
            {%- if check_interval %}
  {{ passive_interval(check_interval) }}
            {%- endif %}
  dependencies:
    - nginx_master
            {%- for extra_dependency in extra_dependencies %}
    - {{ extra_dependency }}
            {%- endfor -%}
        {%- endif %}
    {%- endfor %}
{% endif %}

{%- if salt['pillar.get'](pillar_prefix + ':ssl', False) %}
    {%- set https_uri = http_uri if not https_uri %}

    {% for ip_version, enabled in {"ipv4": True, "ipv6": first_ipv6}.iteritems() %}
        {% if enabled %}
            {%- if ip_version == "ipv4" %}
{{ formula }}_nginx_https:
  description: {{ deployment|capitalize }} NGINX HTTPS Protocol
  command: /usr/lib/nagios/plugins/check_http -S -H {{ domain_name }} -u {{ https_uri }} -e '{{ https_result }}' -I {{ first_ip }}
            {%- elif ip_version == "ipv6" %}
{{ formula }}_nginx_https_ipv6:
  description: {{ deployment|capitalize }} NGINX HTTPS Protocol for IPv6
  command: /usr/lib/nagios/plugins/check_http -6 -S -H {{ domain_name }} -u {{ https_uri }} -e '{{ https_result }}' -I [{{ first_ipv6 }}]
            {%- endif %}
            {%- if timeout %} --timeout={{ timeout }}{% endif -%}
            {%- if timeout %}
  timeout: {{ timeout }}
            {%- endif -%}
            {%- if check_interval %}
  {{ passive_interval(check_interval) }}
            {%- endif %}
  dependencies:
    - nginx_master
            {%- for extra_dependency in extra_dependencies %}
    - {{ extra_dependency }}
            {%- endfor %}
        {%- endif %}
    {%- endfor %}

{{ formula }}_nginx_https_certificate:
  description: {{ deployment|capitalize }} HTTPS Certificate Expiration
  {{ passive_interval(24 * 60) }} {#- a day  #}
  command: /usr/lib/nagios/plugins/check_http -S -H {{ domain_name }} -C {{ salt['pillar.get']('ssl:expiry_days', 15) }} -I {{ first_ip }}
        {%- if timeout %} --timeout={{ timeout }}{% endif -%}
    {%- if timeout %}
  timeout: {{ timeout }}
    {%- endif %}
  dependencies:
    - {{ formula }}_nginx_https

  {% if domain_name|replace('.', '')|int == 0 %} {# only check if it is a domain, not IP. int returns 0 for unconvertible value #}
{{ formula }}_ssl_configuration:
  description: {{ deployment|capitalize }} SSL Configuration
  {{ passive_interval(24 * 60) }} {#- a day  #}
  command: /usr/lib/nagios/plugins/check_ssl_configuration.py --formula={{ formula }} --check={{ formula }}_ssl_configuration
  timeout: 55
  arguments:
    host: {{ domain_name }}
    port: 443
    freshness: {{ ((24 * 60) + 10) * 60 }}
  dependencies:
    - {{ formula }}_nginx_https_certificate
    {#- no alert if load is too high #}
    - load_average
  {%- endif %}
{%- endif -%}
{%- endmacro %}

{%- macro check_bad_link(formula, pillar_prefix=None) %}
  {%- set pillar_prefix = pillar_prefix or formula %}
  {%- set https_arg = "-ssl" if salt['pillar.get'](pillar_prefix ~ ':ssl_redirect', True) else "" %}
  {%- set domain_name = salt['pillar.get'](pillar_prefix ~ ':hostnames')[0] -%}
check_bad_link_{{ formula }}:
  cmd:
    - run
    - name: /usr/lib/nagios/plugins/check_http -H {{ domain_name }} -u /{{ salt['password.generate']('random_url_' ~ formula) }} -e '404 Not Found' {{ https_arg }}
{%- endmacro %}
