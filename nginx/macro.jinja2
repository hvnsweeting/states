{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

{%- macro ssl_config(certname, ip=None) %}
    listen {% if ip %}{{ ip }}:{% endif %}443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/ssl/certs/{{ certname }}_chained.crt;
    ssl_certificate_key /etc/ssl/private/{{ certname }}.key;
    ssl_client_certificate /etc/ssl/certs/{{ certname }}_ca.crt;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # not possible to do exclusive
    ssl_ciphers 'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA';
    ssl_dhparam /etc/ssl/dhparam.pem;
    {# six months, The always parameter ensures that the header is set for all responses, including internally-generated error responses. #}
    add_header Strict-Transport-Security max-age=15768000 always;

  {%- if salt['pillar.get']('nginx:redirect_numeric_ip', False) %}
    {%- for ip in salt['network.ip_addrs']() %}
    if ( $host = {{ ip }} ) {
        return 302 {{ salt['pillar.get']('nginx:redirect_numeric_ip') }};
    }
    {%- endfor -%}
  {%- endif -%}
{%- endmacro %}
