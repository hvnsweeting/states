{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

# {{ salt['pillar.get']('message_do_not_modify') }}
inet_protocols = ipv4{% if salt['monitoring.data']()['ip_addrs6']['public'] %}, ipv6{% endif %}
myhostname = {{ salt['pillar.get']('postfix:myhostname') }}.{{ salt['pillar.get']('mail:mailname') }}
mydomain = {{ salt['pillar.get']('mail:mailname') }}
smtpd_banner = $myhostname ESMTP $mail_name
biff = no
mydestination = {%- for i in salt['pillar.get']('postfix:mydestination', ['localhost', 'localhost.$mydomain']) %} {{ i }}{%- endfor %}
{%- block mynetworks %}
mynetworks = {%- for i in salt['pillar.get']('postfix:mynetworks', ["127.0.0.0/8"]) %} {{ i }}{%- endfor %}
{%- endblock %}
relayhost = {{ salt['pillar.get']('postfix:relayhost', '') }}
relay_domains = {%- for i in salt['pillar.get']('postfix:relay_domains', ['$mydestination']) %} {{ i }}{%- endfor %}
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
mailbox_size_limit = 0
message_size_limit = {{ salt['pillar.get']('postfix:message_size_limit', 10240000) }}
recipient_delimiter = +
inet_interfaces = {{ salt['pillar.get']('postfix:inet_interfaces', 'all') }}
append_dot_mydomain = no
{#-
 Uncomment the next line to generate "delayed mail" warnings
delay_warning_time = 4h
#}
readme_directory = no
smtp_header_checks = pcre:/etc/postfix/smtp_header_checks
{%- set postfix_ssl = salt['pillar.get']('postfix:ssl', False) %}
{%- set sasl_authen = salt['pillar.get']('postfix:allow_remote_client', False) %}
{%- if postfix_ssl %}
{#- TLS parameters #}
smtpd_tls_mandatory_protocols=!SSLv2, !SSLv3
smtpd_tls_cert_file=/etc/ssl/certs/{{ postfix_ssl }}_chained.crt
smtpd_tls_key_file=/etc/ssl/private/{{ postfix_ssl }}.key
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache
smtpd_tls_loglevel = 0
{#- enable opportunistic TLS support in the SMTP server and client #}
smtpd_tls_security_level = may
smtp_tls_security_level = may
smtp_tls_loglevel = 1
{#- if you have authentication enabled, only offer it after STARTTLS #}
  {%- if sasl_authen %}
smtpd_tls_auth_only = yes
  {%- endif %}
{% endif %}
{%- if sasl_authen %}
smtpd_sasl_auth_enable = yes
broken_sasl_auth_clients = yes
smtpd_sasl_type = dovecot
smtpd_sasl_path = private/auth
smtpd_sasl_security_options = noanonymous
smtpd_recipient_restrictions = permit_mynetworks, permit_sasl_authenticated, reject_unauth_destination
{%- endif %}
{%- set alias_domains = salt['pillar.get']('postfix:alias_domains', ['$virtual_alias_maps']) %}
{%- if salt['pillar.get']('postfix:virtual_aliases', False) %}
virtual_alias_maps = hash:/etc/postfix/virtual
virtual_alias_domains = {%- for i in alias_domains %} {{ i }}{%- endfor %}
{%- endif %}
{%- if salt['pillar.get']('postfix:domains', [])|length > 0 %}
virtual_mailbox_domains = {%- for i in salt['pillar.get']('postfix:domains', []) %} {{ i }}{%- endfor %}
virtual_mailbox_base = /var/mail/vhosts
virtual_mailbox_maps = hash:/etc/postfix/vmailbox
virtual_minimum_uid = 100
virtual_uid_maps = static:{{ salt['user.info']('dovecot-agent')['uid'] }}
virtual_gid_maps = static:{{ salt['user.info']('dovecot-agent')['gid'] }}
virtual_transport = lmtp:unix:private/dovecot-lmtp
{%- endif %}
{%- if salt['pillar.get']('postfix:spam_filter', False) %}
content_filter=amavisfeed:[127.0.0.1]:10024
{%- endif %}
