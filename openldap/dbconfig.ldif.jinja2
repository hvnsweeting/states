{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

{% set rootdn = salt['pillar.get']('ldap:rootdn') %}
dn: olcDatabase={1}hdb,cn=config
changetype: modify
replace: olcSuffix
olcSuffix: {{ salt['pillar.get']('ldap:suffix') }}
-
replace: olcRootDN
olcRootDN: {{ rootdn }}
-
replace: olcRootPW
olcRootPW: {{ salt['pillar.get']('ldap:rootpw') }}
-
delete: olcAccess
-
add: olcAccess
olcAccess: {0}to * by dn.exact=gidNumber=0+uidNumber=0,cn=peercred,cn=external
 ,cn=auth manage by * break
olcAccess: {1}to attrs=userPassword,shadowLastChange by self write by anonymou
 s auth by dn="{{ rootdn }}" write by * none
olcAccess: {2}to dn.base="" by * read
olcAccess: {3}to * by self write by dn="{{ rootdn }}" write
  by * read
-
add: olcDbIndex
olcDbIndex: uid eq

dn: cn=config
changetype: modify
replace: olcLogLevel
{%- if salt['pillar.get']('debug', False) %}
olcLogLevel: -1
{%- else %}
olcLogLevel: None
{%- endif -%}
{%- if salt['pillar.get']('ldap:ssl', False) %}
-
replace: olcTLSCACertificateFile
{%- set ssl = salt['pillar.get']('ldap:ssl') %}
olcTLSCACertificateFile: /etc/ssl/certs/{{ ssl }}_ca.crt
-
replace: olcTLSCertificateFile
olcTLSCertificateFile: /etc/ssl/certs/{{ ssl }}.crt
-
replace: olcTLSCertificateKeyFile
olcTLSCertificateKeyFile: /etc/ssl/private/{{ ssl }}.pem
-
replace: olcSecurity
olcSecurity: ssf=128
-
replace: olcTLSVerifyClient
olcTLSVerifyClient: never
-
replace: olcTLSCipherSuite
{# use openssl CipherSuite here cause a segfault -#}
olcTLSCipherSuite: SECURE256:!AES-128-CBC:-VERS-SSL3.0
-
replace: olcLocalSSF
olcLocalSSF: 128
{% endif -%}
