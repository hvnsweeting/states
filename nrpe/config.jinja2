{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

{%- from "os.jinja2" import os with context %}
{%- from "nrpe/passive.jinja2" import passive_interval with context -%}

# {{ salt['pillar.get']('message_do_not_modify') }}

nsca_passive_procs:
  description: NSCA Passive daemon Processes
  command: '/usr/lib/nagios/plugins/check_procs -u nagios -C nsca_passive -c 1:1'
{#-
  Since
  https://github.com/monitoring-plugins/monitoring-plugins/commit/77fc3548ae1be360584082d771fa01696d4f4479
  it's not possible to have nsca_passive check for itself.
  And it does not make much sense to spawn a subprocess from nsca_passive
  daemon to check itself. So this check should be active.
#}
  passive: False

{%- set warning_percentage = salt['pillar.get']('nrpe:disk_warning_percentage', 20) | int %}
free_disks_space:
  description: All Disks
  command: /usr/lib/nagios/plugins/check_disk -w {{ warning_percentage }}% -c {{ (warning_percentage / 2) | int }}% -X tmpfs -X devtmpfs -X none -X tracefs{% if grains['virtual'] == 'VirtualBox' %} -X vboxsf{% endif -%}

{%- set max_proc = salt['pillar.get']('nrpe:max_proc', 150)|int -%}
{%- set max_proc_15_percent = max_proc + (max_proc / 100.0 * 15) %}
total_procs:
  description: Total Processes
  {#- send only notification if it's critical for more than 10 minutes #}
  first_notification_delay: 10
  notification_options: c,u,r
  command: /usr/lib/nagios/plugins/check_procs -w {{ max_proc }} -c {{ max_proc_15_percent|int }} {% if os.is_trusty %}-k{% endif %}

zombie_procs:
  description: Zombie Processes
  command: /usr/lib/nagios/plugins/check_procs -w 1 -c 2 -s Z
  {#- send only notification if it's critical for more than 10 minutes #}
  first_notification_delay: 10

nrpe_check_procs:
  description: NRPE Check Processes
  command: /usr/lib/nagios/plugins/check_procs -u nagios -C nrpe -w 50 -c 75
  {#- send only notification if it's critical for more than 10 minutes #}
  first_notification_delay: 10
  notification_options: c,u,r

{# As check_procs ``-s`` option does not support exactly process state
    matching, this check will use state ``Ss`` which also matches ``S``.#}
nrpe_procs:
  description: NRPE Daemon Processes
  command: '/usr/lib/nagios/plugins/check_procs -u nagios -C nrpe -c 1: -p 1 -s Ss'

nrpe_hang_check_procs:
  description: NRPE Check Processes which took too long
  {{ passive_interval(2 * 60) }}
  command: '/usr/lib/nagios/plugins/check_procs -m ELAPSED -c :1800 -s S -C nrpe -p 1 -u nagios'

logged_users:
  description: Logged Users
  command: /usr/lib/nagios/plugins/check_users -w 15 -c 20
  {#- send only notification if it's critical for more than 60 minutes #}
  first_notification_delay: 60
  notification_options: c,u,r

loopback_interface:
  description: Loopback Interface
  command: /usr/lib/nagios/plugins/check_ping -H 127.0.0.1 -p 1 -w 100,100% -c 100,100%

loopback_interface_ipv6:
  description: Loopback Interface IPv6
  command: /usr/lib/nagios/plugins/check_ping -H ::1 -p 1 -w 100,100% -c 100,100%

oom_messages:
  description: Out Of Memory Messages
  command: sudo /usr/lib/nagios/plugins/check_oom.py --formula=nrpe --check=oom_messages
  timeout: 30
  arguments:
    seconds: 3600

free_memory:
  description: Memory Usage
  command: /usr/lib/nagios/plugins/check_memory.py --formula=nrpe --check=free_memory
  arguments:
    warning: 90
    critical: 95

{%- if salt['file.contains_regex']('/proc/swaps','^/') and grains['virtual'] != 'openvzve' %}
free_swap_space:
  description: Swap Usage
  command: /usr/lib/nagios/plugins/check_swap -w 30% -c 10%
{%- endif %}

load_average:
  description: Load Average
{%- set __test__ = salt['pillar.get']('__test__', False) %}
  command: /usr/lib/nagios/plugins/check_load -w {% if __test__ -%}90,85,83 -c 100,95,91{% else %}10,5,3 -c 20,15,11{% endif %}
  {#- send only notification if it's critical for more than 10 minutes #}
  first_notification_delay: 10
  notification_options: c,u,r

nrpe-remote-port:
  description: Remote NRPE Port
  check: check_tcp!5666
  passive: False
  timeout: 20
  dependencies:
    - nrpe_procs

{% if __test__ %}
{# TODO: add check that only run during test
   (see test.sls) #}
{% endif %}
