{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

{%- extends "openvpn/server/base.jinja2" %}

{%- set vpn_instance = salt['pillar.get']('openvpn:servers:' ~ instance) %}
{%- set topology = salt['pillar.get']('openvpn:servers:' ~ instance ~ ':topology', 'subnet') %}
{%- set server = vpn_instance['server']%}
{%- set server_octets = server.split()[0].split('.') %}
{%- set server_netmask = server.split()[1] %}
{%- set server_last_octet = server_octets[3]|int + 1 %}
{%- set server_ip = server_octets[0] + "." + server_octets[1] + "." + server_octets[2] + "." + server_last_octet|string %}
{%- set first_ipv6 = salt['monitoring.data']()['ip_addrs6']['public'] %}

{%- if first_ipv6 %}
  {%- set server_ipv6 = vpn_instance['server-ipv6'] %}
{%- endif %}

{%- set static_ips = [] %}

{%- for client in vpn_instance['clients'] if client is mapping -%}
  {%- do static_ips.append(client) -%}
{%- endfor %}

{%- block topology %}
topology {{ topology }}
  {%- if static_ips %}
mode server
tls-server
push "route-gateway {{ server_ip }}"
    {%- if topology == "subnet" %}
push "topology subnet"
ifconfig {{ server_ip }} {{ server_netmask }}
ifconfig-pool {{ vpn_instance['ifconfig-pool'] }} {{ server_netmask }}
    {%- elif topology == "net30" %}
ifconfig {{ server_ip }} {{ server_octets[0] + "." + server_octets[1] + "." + server_octets[2] + "." + (server_last_octet + 1)|string }}
ifconfig-pool {{ vpn_instance['ifconfig-pool'] }}
    {%- endif %}
    {%- if first_ipv6 %}
      {%- if vpn_instance['device'].startswith('tun') %}
tun-ipv6
      {%- endif %}
ifconfig-ipv6 {{ salt['common.calc_range'](server_ipv6)[1]|string }} {{ salt['common.calc_range'](server_ipv6)[2]|string }}
ifconfig-ipv6-pool {{ vpn_instance['ifconfig-ipv6-pool'] }}
    {%- endif %}
  {%- else %}
server {{ server }}
    {%- if first_ipv6 %}
server-ipv6 {{ server_ipv6 }}
    {%- endif %}
  {%- endif -%}
ifconfig-noexec
up /usr/share/openvpn/up.sh
down-pre
script-security 2
plugin /usr/lib/openvpn/openvpn-plugin-down-root.so "/usr/share/openvpn/down.sh"
{%- endblock topology %}

{%- block authentication_mode %}
ca /etc/openvpn/{{ instance }}/ca.crt
cert /etc/openvpn/{{ instance }}/server.crt
key /etc/openvpn/{{ instance }}/server.key
dh /etc/openvpn/dh.pem
ifconfig-pool-persist /var/lib/openvpn/{{ instance }}.ipp
client-config-dir /etc/openvpn/{{ instance }}/ccd
crl-verify /etc/openvpn/{{ instance }}/crl.pem
{%- endblock authentication_mode %}
