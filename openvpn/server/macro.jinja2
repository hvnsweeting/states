{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

{%- macro service_openvpn(instance, service_running=True) %}
{%- from 'upstart/rsyslog.jinja2' import manage_upstart_log with context %}
openvpn-{{ instance }}:
  file:
    - managed
    - name: /etc/init/openvpn-{{ instance }}.conf
    - user: root
    - group: root
    - mode: 440
    - source:
      - salt://openvpn/server/override/upstart.jinja2
      - salt://openvpn/server/upstart.jinja2
    - template: jinja
    - require:
      - file: /etc/openvpn/{{ instance }}/config
      - file: /var/lib/openvpn
      - file: /var/run/openvpn
      - file: /var/log/openvpn
    - context:
        instance: {{ instance }}
{%- if service_running %}
  service:
    - running
    - enable: True
    - order: 50
{%- else %}
{# we are not managing service state as it is delegated to upstart to do
the job, managing it here will cause conflict with upstart as it be managed
by two entities #}
  module:
    - wait
    - name: service.restart {# need restart if config changed #}
    - watch:
      - service: openvpn-{{ instance }}
  service: {# keep same exposed API #}
    - enabled
{%- endif %}
    - watch:
      - file: openvpn-{{ instance }}
      - cmd: openvpn_dh
      - file: /etc/default/openvpn

{{ manage_upstart_log('openvpn-' + instance) }}

{%- endmacro %}
{#- does not use PID, no need to manage #}
