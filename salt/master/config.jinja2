{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

# {{ salt['pillar.get']('message_do_not_modify') }}

fileserver_backend:
  - roots

{%- set git_branch = salt['pillar.get']('branch', 'master') %}
file_roots:
  base:
    - /srv/salt/top
{%- if git_branch != "master" %}
  {{ git_branch }}:
{%- endif %}
{%- for repo in salt['pillar.get']('salt_master:gitfs_remotes', []) %}
{#- needs prefix loop.index because 2 different repos from different sources
   can have the same name #}
    {%- set outer_loop_index = loop.index %}
    {%- if repo is mapping %}
      {# it is a dict but suppose to contain only 1 entry #}
      {%- for gitlink, subdir in repo.iteritems() %}
        {%- set dirname = outer_loop_index ~ gitlink.split('/')[-1] %}
    - /srv/salt/states/{{ dirname }}/{{ subdir }}
      {%- endfor -%}
    {%- else %}
      {%- set dirname = outer_loop_index ~ repo.split('/')[-1] %}
    - /srv/salt/states/{{ dirname }}
    {%- endif %}
{%- endfor %}
{%- set extra_envs = salt['pillar.get']('salt_master:extra_envs', []) %}
{%- if extra_envs %}
  {%- set envs = {} %}
  {%- for extra_env in extra_envs %}
    {%- if extra_env is mapping %}
      {%- set env = extra_env.keys()[0] %}
      {%- set dirname = extra_env.values()[0].split('/')[-1] %}
    {%- else %}
      {%- set dirname = extra_env.split('/')[-1] %}
      {%- set env = dirname.split('.')[0] %}
    {%- endif %}
    {%- do envs.update({env: dirname}) %}
  {{ env }}:
    - /srv/salt/states/{{ dirname }}
  {%- endfor %}
  {%- if 'windows' in envs %}
    {% if grains['saltversioninfo'] < (2015, 8, 0, 0) %}
win_repo: /srv/salt/states/{{ envs['windows'] }}/win/repo
win_repo_mastercachefile: /srv/salt/states/{{ envs['windows'] }}/win/repo/winrepo.p
    {%- else %}
winrepo_dir: /srv/salt/states/{{ envs['windows'] }}/win/repo
winrepo_dir_ng: /srv/salt/states/{{ envs['windows'] }}/win/repo-ng
    {%- endif %}
  {%- endif %}
{%- endif %}

worker_threads: {{ salt['pillar.get']('salt_master:workers', None)|default(grains['num_cpus'], boolean=True) }}

pillar_opts: False {# hide ``master`` key in minion pillar #}

log_file: file:///dev/log
{%- if salt['pillar.get']('debug', False) %}
log_level: debug
{%- else %}
log_level: warning
{%- endif %}
log_fmt_logfile: '%(asctime)-15s salt-master[%(process)d] %(name)s: %(message)s'
log_datefmt_logfile: '%b %d %H:%M:%S'
loop_interval: {{ salt['pillar.get']('salt_master:loop_interval', 60) }}
keep_jobs: {{ salt['pillar.get']('salt_master:keep_jobs_hours', 24) }}
{#- default value for gather_job_timeout might change between saltstack versions #}
gather_job_timeout: {{ salt['pillar.get']('salt_master:gather_job_timeout', 5) }}
{#
TODO: in salt 2014.7 use http://docs.saltstack.com/en/latest/ref/configuration/master.html#master-job-cache
{%- if salt['pillar.get']('sentry_dsn', False) %}
ext_job_cache: sentry_common
{%- endif -%}
#}
{#- access same modules as minion #}
extension_modules: {{ opts['cachedir'] }}/extmods

{%- set sentry_dsn = salt['pillar.get']('sentry_dsn', False) %}
{%- if sentry_dsn %}
sentry_common: {{ sentry_dsn }}
sentry_handler:
  dsn: requests+{{ sentry_dsn }}
{%- endif -%}

{%- if salt['pillar.get']('salt_master:reactor', False) %}
reactor:
  - 'salt/cloud/*/created':
    - /srv/reactor/create/*.sls
  - 'salt/cloud/*/destroyed':
    - /srv/reactor/destroy/*.sls
  - 'salt/job/*/ret/*':
    - /srv/reactor/job/*.sls
  - 'salt-common/reaction/*':
    - /srv/reactor/reaction/*.sls
{%- endif %}

{%- if salt['monitoring.data']()['ip_addrs6']['public'] %}
ipv6: True
interface: '::'
{%- endif %}
