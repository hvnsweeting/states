{%- set storages = salt['pillar.get']('orientdb:storages') -%}
{%- set backup_storages = [] -%}
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- {{ salt['pillar.get']('message_do_not_modify') }} -->
<orient-server>

    <storages>
{%- for name in storages %}
        <storage name="{{ name }}"
                 userName="{{ storages[name]['username'] }}"
                 userPassword="{{ storages[name]['password'] }}"
    {%- if storages[name]['type'] == 'memory' %}
                 path="mem:{{ name }}"
    {%- elif storages[name]['type'] == 'plocal' %}
                 path="plocal:/var/lib/orientdb/databases/{{ name }}"
        {#- only plocal support backup -#}
        {%- if storages[name].get('backup', False) -%}
            {%- do backup_storages.append(name) -%}
        {%- endif -%}
    {%- endif %}
                 loaded-at-startup="true"/>
{%- endfor %}
    </storages>

    <handlers>
        <handler class="com.orientechnologies.orient.graph.handler.OGraphServerHandler">
            <parameters>
                <parameter name="enabled" value="true"/>
                <parameter name="graph.pool.max" value="50"/>
            </parameters>
        </handler>

        <handler class="com.orientechnologies.orient.server.hazelcast.OHazelcastPlugin">
            <parameters>
                <parameter name="enabled"
                           value="{% if cluster %}true{% else %}false{% endif %}"/>
{%- if cluster %}
                <parameter name="nodeName"
                           value="{{ grains['id'] }}"/>
                <parameter name="configuration.db.default"
                           value="/etc/orientdb/hazelcast.json"/>
                <parameter name="configuration.hazelcast"
                           value="/etc/orientdb/hazelcast.xml"/>
{%- endif %}
            </parameters>
        </handler>

        {#- JMX server #}
        <handler class="com.orientechnologies.orient.server.handler.OJMXPlugin">
            <parameters>
                <parameter name="enabled" value="false"/>
                <parameter name="profilerManaged" value="true"/>
            </parameters>
        </handler>

        {#- Automatic Backup #}
        <handler class="com.orientechnologies.orient.server.handler.OAutomaticBackup">
            <parameters>
                <!-- backup's context is: {{ show_full_context()['backup'] }} -->
                <parameter name="enabled"
                           value="{% if backup|default(False) and backup_storages %}true{% else %}false{% endif %}"/>
                <parameter name="delay" value="{{ salt['pillar.get']('orientdb:backup_frequency', 24) }}h"/>
                <parameter name="target.directory"
                           value="/var/backups/orientdb/"/>
                <parameter name="target.fileName"
                           value="orientdb-${DBNAME}-${DATE:yyyy-MM-dd-HH_mm_ss}.zip"/>
                <parameter name="compressionLevel" value="9"/>
                <parameter name="bufferSize"
                           {#- 10 Mb #}
                           value="{{ 1048576 * 10 }}"/>
                <parameter name="db.include"
                           value="
    {%- for name in backup_storages -%}
        {{ name }}
        {%- if not loop.last %},{% endif -%}
    {%- endfor -%}
                                 "/>
                <parameter name="db.exclude" value=""/>
            </parameters>
        </handler>

        {#- Server side script interpreter
            WARNING! THIS CAN BE A SECURITY HOLE:
            ENABLE IT ONLY IF CLIENTS ARE TRUST #}
        <handler class="com.orientechnologies.orient.server.handler.OServerSideScriptInterpreter">
            <parameters>
                <parameter name="enabled" value="true"/>
                <parameter name="allowedLanguages" value="SQL"/>
            </parameters>
        </handler>

        {#- Use session token #}
        <handler class="com.orientechnologies.orient.server.token.OrientTokenHandler">
            <parameters>
                <parameter name="enabled" value="false"/>
                {#- PRIVATE KEY #}
                <parameter name="oAuth2Key" value=""/>
                {#- SESSION LENGTH IN MINUTES, DEFAULT=1 HOUR #}
                <parameter name="sessionLength" value="60"/>
                {#- ENCRYPTION ALGORITHM, DEFAULT=HmacSHA256 #}
                <parameter name="encryptionAlgorithm" value="HmacSHA256"/>
            </parameters>
        </handler>
    </handlers>

    <network>
        <protocols>
            <protocol name="binary"
                      implementation="com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary"/>
            <protocol name="http"
                      implementation="com.orientechnologies.orient.server.network.protocol.http.ONetworkProtocolHttpDb"/>
        </protocols>

        <listeners>
            {%- set bind = salt['pillar.get']("orientdb:bind", "0.0.0.0") %}
            <listener protocol="binary" ip-address="{{ bind }}"
                      port-range="2424-2424" socket="default"/>
            <listener protocol="http" ip-address="{{ bind }}"
                      port-range="2480-2480" socket="default">
                <parameters>
                    <parameter name="network.http.charset" value="utf-8"/>
                </parameters>
                <commands>
                    <command pattern="GET|www GET|studio/ GET| GET|*.htm GET|*.html GET|*.xml GET|*.jpeg GET|*.jpg GET|*.png GET|*.gif GET|*.js GET|*.css GET|*.swf GET|*.ico GET|*.txt GET|*.otf GET|*.pjs GET|*.svg GET|*.json GET|*.woff GET|*.ttf GET|*.svgz"
                             implementation="com.orientechnologies.orient.server.network.protocol.http.command.get.OServerCommandGetStaticContent">
                        <parameters>
                            {#- Don't cache html resources in development mode
                            <entry name="http.cache:*.htm *.html"
                                   value="Cache-Control: no-cache, no-store, max-age=0, must-revalidate\r\nPragma: no-cache"/>
                             #}
                            <entry name="http.cache:default"
                                   value="Cache-Control: max-age=120"/>
                        </parameters>
                    </command>
                    <command pattern="GET|gephi/*"
                             implementation="com.orientechnologies.orient.graph.server.command.OServerCommandGetGephi"/>
                </commands>
            </listener>
        </listeners>

        <cluster>
        </cluster>
    </network>

    <users>
        <user name="root"
              password="{{ salt['pillar.get']('orientdb:password') }}"
              resources="*"/>
{%- if cluster %}
        <user name="replicator"
              password="{{ salt['password.generate']('orientdb_replicator', 65) }}"
              resources="database.passthrough"/>
{%- endif %}
    </users>

    <properties>
        {#- DATABASE POOL: size min/max #}
        <entry name="db.pool.min" value="1"/>
        <entry name="db.pool.max" value="50"/>
        <entry name="log.console.level"
               value="{% if debug %}debug{% else %}warning{% endif %}"/>
        <entry name="log.file.level"
               value="{% if debug %}debug{% else %}warning{% endif %}"/>
        <entry name="profiler.enabled" value="{{ profiler|default(False)|lower }}"/>
        {%- if profiler|default(False) %}
        <entry name="profiler.config" value="30,10,10" />
        {%- endif %}
    </properties>
</orient-server>
